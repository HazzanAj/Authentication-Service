public class AuthenticationService {
    static final long EXPIRATIONTIME = 864_000_000; //  1 day in milliseconds
    static final String SIGNINGKEY = "Secretkay";
    static final String PFEFIX = "Bearer";

    // Add token to Authorization header
    static public void addToken(HttpServletResponse res, String username){

        String JwtToken = Jwts.builder().setSubject(username)
                .setExpiration(new Date(System.currentTimeMillis()+EXPIRATIONTIME) )
                .signWith(SignatureAlgorithm.HS512, SIGNINGKEY).compact();
        res.addHeader("Authorization", PFEFIX + "" + JwtToken);
        res.addHeader("Access-Control-Expose-Headers", "Authorization");
    }
    // Get Token From Authorization Header
    static public Authentication getAuthentication(HttpServletRequest request){
        String token =    request.getHeader("Authorization");
        if( token !=null ) {
            String user = Jwts.parser()
                    .setSigningKey(SIGNINGKEY)
                    .parseClaimsJws(token.replace(PREFIX, ""))
                    .getBody()
                    .getSubject();
            if (user != null)
                return new UsernamePasswordAuthenticationToken(user, null, emptyList());
        }
        return null;
        }
}
